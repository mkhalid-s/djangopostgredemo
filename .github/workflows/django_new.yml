name: Django CI

on:
  push:
    branches:
    - '**'
  pull_request:
    branches:
    - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.11]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      env: # Set the secret as an input Or as an environment variable
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        python manage.py test
        
  build-mac:
      runs-on: flyci-macos-large-latest-m1
      strategy:
        max-parallel: 4
        matrix:
          python-version: [3.10.11]
      steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install PostGreSQL on MacOS
        run: |
          brew install postgresql
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
                    brew install postgresql
          pip install -r requirements.txt
      - name: Run Tests
        env: # Set the secret as an input Or as an environment variable
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          python manage.py test
